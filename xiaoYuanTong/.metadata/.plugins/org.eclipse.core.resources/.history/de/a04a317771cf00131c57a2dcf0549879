package com.xyt.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.struts2.ServletActionContext;
import org.apache.struts2.convention.annotation.Action;
import org.apache.struts2.convention.annotation.Namespace;
import org.apache.struts2.convention.annotation.ParentPackage;
import org.springframework.beans.factory.annotation.Autowired;

import com.opensymphony.xwork2.ModelDriven;

import com.xyt.model.Lostandfindtbl;
import com.xyt.model.Messagetbl;
import com.xyt.pageModel.Commit;
import com.xyt.pageModel.FindAndLost;
import com.xyt.pageModel.Message;
import com.xyt.service.MessageServiceI;


@ParentPackage("basePackage")
@Namespace("/")
@Action(value = "dynamicAction")
/*
 * 交友平台中的动态模块
 */
public class DynamicAction extends BaseAction implements ModelDriven<Message>{

	private Message message = new Message (); //模型驱动

//	@Override
	
	public Message getModel() {
		return message;
	}

	private MessageServiceI messageService;

	
	@Autowired
	public MessageServiceI getmessageService() {
		return messageService;
	}

	
	public void messageList() {
		
		String topicid = ServletActionContext.getRequest().getParameter("topicid");
		
		Map<String, Object> params = new HashMap<String, Object>();
		
		List<Messagetbl> ll =messageService.getMessageService(topicid);
		
		//想要返还给前台的列表
		List<FindAndLost> fi=new ArrayList<FindAndLost>();
		
		for (int i=0; i<ll.size(); i++){
			
			FindAndLost finfo = new FindAndLost();
			
			finfo.setLoastandfindId(ll.get(i).getLoastandfindId());
			finfo.setName(ll.get(i).getUsertbl().getName());
			finfo.setContent(ll.get(i).getContent());
			finfo.setCategory(ll.get(i).getCategory());
			finfo.setCreateTime(ll.get(i).getCreateTime());
			finfo.setFlag(ll.get(i).getFlag());
			finfo.setState(ll.get(i).getFlag());
			
			
			//BeanUtils.copyProperties(ll.get(i), finfo);

			fi.add(finfo);
		}
		
		params.put("findandlost", fi);
		
		super.writeJson(params);
		
	}//将得到的类转换成json格式，传递给前台
	
	public void insertmessage(){
		
	}
	    
	
	
	public void insertCommit(Commit  commit){   //针对某个消息进行评论
	}
	
	
	public void getCommit(String messageid){   //找到针对某个消息的全部评论 
	
	}
	
	public void getTransmit(){   //获取转发的信息
	
	}
	
	
	}
	
